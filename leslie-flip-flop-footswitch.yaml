script:
  - id: checkforstop
    mode: restart                   
    then:
    - logger.log: "script CheckForStop running"
    - delay: 2s
    - if:
        condition:
          binary_sensor.is_off: footswitch
        then:          
            - logger.log: "STOP MODE ON"  
            - switch.turn_on: stop                
            - switch.turn_off: fastmotor            
            - switch.turn_off: slowmotor               
            - switch.turn_off: led         
            - switch.turn_off: lamp               

binary_sensor:
  - platform: gpio
    name: "Footswitch"  
    id: footswitch
    pin: 
      number: GPIO13 #D7
      mode:
        input: true
        pullup: true
    filters:
      - debounce: 0.1 #Only send values if the last incoming value is at least specified time period old
    on_press:    
       then:
        - switch.turn_off: led
    on_release:
       then:
        - script.execute: checkforstop
        - switch.turn_on: led
#coming out of stop,ALWAYS go to SLOW mode              

        - if:
            condition:
              - and: 
                - switch.is_on: fastmotor              
                - switch.is_off: stop
            then:
              - logger.log: "SLOW MODE" 
              - switch.turn_off: fastmotor 
              - switch.turn_off: lamp      
              - logger.log: "LAMP OFF SLOW MODE"   
              - delay: 50ms      
              - switch.turn_on: slowmotor                         
            else:           
              - logger.log: "FAST MODE" 
              - switch.turn_off: slowmotor
              - delay: 50ms
              - switch.turn_on: fastmotor             
              - switch.turn_on: lamp

        - if:
            condition:
              - and: 
                - switch.is_on: stop
            then:
              - logger.log: "SLOW MODE" 
              - switch.turn_off: fastmotor 
              - switch.turn_off: led   
              - switch.turn_off: lamp   
              - logger.log: "LAMP OFF STOP MODE"         
              - switch.turn_on: slowmotor                         
              - switch.turn_off: stop


#d1/gpio5 d2/gpio4 best for relays
switch:
  - platform: gpio
    name: "Fast Motor"
    id: fastmotor
    pin: GPIO4 #d2
    interlock: [slowmotor]
 
  - platform: gpio
    name: "Slow Motor"
    id: slowmotor
    pin: GPIO5 #d1
    interlock: [fastmotor]

  - platform: gpio #onboard led
    id: led
    pin: GPIO2
    inverted: true

  - platform: template
    id: stop
    optimistic: true
    internal: True
    #pin: GPIO12 #DUMMY SW

  - platform: gpio
    id: lamp
    name: "Lamp Fast"
    pin: GPIO14 #D5 OUT TO INDICATOR LAMP

number:
#test numbers
  - platform: template
    name: "debounce on time"
    id: debounce_on_time
    min_value: 10
    max_value: 500
    step: 5
    initial_value: 75
    optimistic: true
    restore_value: true
    unit_of_measurement: "ms"
    mode: slider

  - platform: template
    name: "debounce off time"
    id: debounce_off_time
    min_value: 10
    max_value: 500
    step: 5
    initial_value: 75
    optimistic: true
    restore_value: true
    unit_of_measurement: "ms"
    mode: slider

esphome:
  name: leslie-flip-flop-footswitch
  friendly_name: Leslie Flip Flop footswitch
  on_boot:
    then:  
      - wifi.disable:
      - switch.turn_on: slowmotor
      - switch.turn_off: fastmotor
      - switch.turn_off: led
      # flash lamp 5 times so we know the ESP is working
      - switch.turn_on: lamp
      - delay: 0.5s           
      - switch.turn_off: lamp  
      - delay: 0.5s           
      - switch.turn_on: lamp
      - delay: 0.5s           
      - switch.turn_off: lamp  
      - delay: 0.5s           
      - switch.turn_on: lamp
      - delay: 0.5s           
      - switch.turn_off: lamp  
      - delay: 0.5s           
      - switch.turn_on: lamp
      - delay: 0.5s           
      - switch.turn_off: lamp  
      - delay: 0.5s  
      - switch.turn_on: lamp
      - delay: 0.5s           
      - switch.turn_off: lamp  
      - delay: 0.5s  

esp8266:
   board: esp01_1m
logger:

# Enable Home Assistant API
api:


ota:
  - platform: esphome

web_server:
  local: True

wifi:
  #enable_on_boot: false
  reboot_timeout: 0s
  ssid:  !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ap_timeout: 10s
    ssid: "Leslie-Flip-Flop-Footswitch"
    password: !secret wifi_password

captive_portal:    
